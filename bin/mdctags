#!/usr/bin/env perl
use 5.010;
use strict;
use warnings;
use Cwd qw(abs_path);
use File::Spec;

@ARGV > 0 or die 'No arguments given';

if (@ARGV == 1) {
    print <<'EOD';
!_TAG_FILE_FORMAT       2       /extended format; --format=1 will not append ;" to lines/'
!_TAG_FILE_SORTED       0       /0=unsorted, 1=sorted, 2=foldcase/'
!_TAG_PROGRAM_AUTHOR    lvht /git@lvht.net/'
!_TAG_PROGRAM_NAME      mdctags        //'
!_TAG_PROGRAM_URL       https://github.com/Chris-Slade/tagbar-markdown /official site (forked)/'
!_TAG_PROGRAM_VERSION   0.1.0   //'

EOD
}

open my $f, '<', $ARGV[0] or die $!;

my $path = abs_path(File::Spec->canonpath($ARGV[0]));
my @stack;
my $in_code = 0;

sub rtrim {
    $_[0] =~ s/\s*$//;
}

while (my $line = readline($f)) {
    chomp $line;
    if ($line =~ /^```/) {
        $in_code = !$in_code;
    }
    if (!$in_code) {
        my ($match, $anchor, $title) = $line =~ /^((#+)\s+(\S.*))\s*$/;
        next unless $anchor and $title;

        my %header = (
            'title' => $title,
            'level' => length $anchor,
        );

        if (@stack == 0) {
            unshift @stack, \%header;
        } elsif ($stack[0]{'level'} < $header{'level'}) {
            unshift @stack, \%header;
        } else {
            while (@stack && $stack[0]{'level'} >= $header{'level'}) {
                shift @stack;
            }
            unshift @stack, \%header;
        }

        my @scopes = map { $_->{'title'} } reverse @stack;
        pop @scopes;
        my $scopes_str = join '::', @scopes;
        my $level = $header{'level'};
        my $plevel;
        if (@stack < 2) {
            $plevel = $level > 1 ? $level - 1 : 0;
        } else {
            $plevel = $stack[1]{'level'};
        }
        my $scope = $scopes_str ? "h$plevel:$scopes_str" : '';
        my $type = chr(0x60 + $level);

        if (@ARGV == 2) {
            if ($level > 1) {
                printf(
                    "%s%s\n",
                    ' ' x (length($anchor) - 2),
                    "- [$title](#$title)"
                );
            }
        } else {
            print "$title\t$path\t/^$match\$/;\"\t$type\tline:$.\t$scope\n";
        }
    }
}
